global:
  version: "main"
  labels:
    app: mcpo
    team: adorsys-gis

mcpo:
  controllers:
    main:
      type: deployment
      strategy: Recreate
      replicas: 1
      labels:
        main: main-app
      containers:
        mcpo:
          image:
            repository: ghcr.io/open-webui/mcpo
            tag: "{{ .Values.global.version }}"
            pullPolicy: IfNotPresent
          
          command: /bin/sh
          
          args:
            - -c
            - |
              set -e
              mcpo --api-key $API_KEY --config=/tmp/config.json
          
          resources:
            requests:
              cpu: 1000m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 4096Mi
  
          envFrom:
            - secretRef:
                name: mcpo-api-key-env
                
  service:
    mcpo:
      enabled: true
      annotations: { }
      type: ClusterIP
      controller: main
      ports:
        http:
          enabled: true
          port: 8000
          targetPort: 8000
  
  ingress:
    mcpo:
      enabled: false
      annotations: { }
      #className: 'alb'
      hosts:
        - host: mcpo.example.com
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: mcpo
                port: http
      tls:
        - secretName: mcpo-example-com-secret
          hosts:
            - mcpo.example.com
  
  configMaps:
    config:
      enabled: true
      annotations:
        description: 'Common configuration for the MCPo.'
      data:
        "config.json": |
          {
            "mcpServers": {
              "memory": {
                "command": "npx",
                "args": [
                  "-y",
                  "@modelcontextprotocol/server-memory"
                ]
              },
              "time": {
                "command": "uvx",
                "args": [
                  "mcp-server-time",
                  "--local-timezone=Europe/Berlin"
                ]
              },
              "fetch": {
                "command": "uvx",
                "args": [
                  "mcp-server-fetch"
                ]
              },
              "puppeteer": {
                "command": "npx",
                "args": [
                  "-y",
                  "@modelcontextprotocol/server-puppeteer"
                ]
              },
              "sequential-thinking": {
                "command": "npx",
                "args": [
                  "-y",
                  "@modelcontextprotocol/server-sequential-thinking"
                ]
              }
            }
          }
  
  
  networkpolicies:
    main:
      enabled: true
      controller: main
      policyTypes:
        - Ingress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: mcpo
            ports:
              - protocol: TCP
                port: 8000
  persistence:
    config:
      enabled: true
      type: configMap
      identifier: config
      advancedMounts:
        main:
          mcpo:
            - path: /tmp/config.json
              readOnly: true
              subPath: config.json
  